<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demeter.cloud.model.mapper.WorksInfoMapper">
  <resultMap id="BaseResultMap" type="com.demeter.cloud.model.entity.WorksInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="introduction" jdbcType="VARCHAR" property="introduction" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="customer_id" jdbcType="INTEGER" property="customerId" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="rotate_pictures" jdbcType="VARCHAR" property="rotatePictures" />
    <result column="cover_picture" jdbcType="VARCHAR" property="coverPicture" />
    <result column="virtual_vote" jdbcType="DECIMAL" property="virtualVote" />
    <result column="actual_vote" jdbcType="DECIMAL" property="actualVote" />
    <result column="virtual_like" jdbcType="DECIMAL" property="virtualLike" />
    <result column="actual_like" jdbcType="DECIMAL" property="actualLike" />
    <result column="source_type" jdbcType="INTEGER" property="sourceType" />
    <result column="like_status" jdbcType="TINYINT" property="likeStatus" />
    <result column="ip_address" jdbcType="VARCHAR" property="ipAddress" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, code, `name`, introduction, content, customer_id, goods_id, rotate_pictures, 
    cover_picture, virtual_vote, actual_vote, virtual_like, actual_like, source_type, 
    like_status, ip_address, is_delete, create_by, create_time, update_by, update_time, 
    `status`, remark
  </sql>
  <select id="selectByExample" parameterType="com.demeter.cloud.model.entity.WorksInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from demeter_works_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <if test="example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        id, code, `name`, introduction, content, customer_id, goods_id, rotate_pictures, 
          cover_picture, virtual_vote, actual_vote, virtual_like, actual_like, source_type, 
          like_status, ip_address, is_delete, create_by, create_time, update_by, update_time, 
          `status`, remark
      </otherwise>
    </choose>
    from demeter_works_info
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from demeter_works_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKeyWithLogicalDelete" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select 
    <include refid="Base_Column_List" />
    from demeter_works_info
    where id = #{id,jdbcType=INTEGER}
      and is_delete = 
    <choose>
      <when test="andLogicalDeleted">
        1
      </when>
      <otherwise>
        0
      </otherwise>
    </choose>
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        id, code, `name`, introduction, content, customer_id, goods_id, rotate_pictures, 
          cover_picture, virtual_vote, actual_vote, virtual_like, actual_like, source_type, 
          like_status, ip_address, is_delete, create_by, create_time, update_by, update_time, 
          `status`, remark
      </otherwise>
    </choose>
    from demeter_works_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from demeter_works_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.demeter.cloud.model.entity.WorksInfoExample">
    delete from demeter_works_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.demeter.cloud.model.entity.WorksInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into demeter_works_info (code, `name`, introduction, 
      content, customer_id, goods_id, 
      rotate_pictures, cover_picture, virtual_vote, 
      actual_vote, virtual_like, actual_like, 
      source_type, like_status, ip_address, 
      is_delete, create_by, create_time, 
      update_by, update_time, `status`, 
      remark)
    values (#{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{introduction,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{customerId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, 
      #{rotatePictures,jdbcType=VARCHAR}, #{coverPicture,jdbcType=VARCHAR}, #{virtualVote,jdbcType=DECIMAL}, 
      #{actualVote,jdbcType=DECIMAL}, #{virtualLike,jdbcType=DECIMAL}, #{actualLike,jdbcType=DECIMAL}, 
      #{sourceType,jdbcType=INTEGER}, #{likeStatus,jdbcType=TINYINT}, #{ipAddress,jdbcType=VARCHAR}, 
      #{isDelete,jdbcType=TINYINT}, #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.demeter.cloud.model.entity.WorksInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into demeter_works_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="introduction != null">
        introduction,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="rotatePictures != null">
        rotate_pictures,
      </if>
      <if test="coverPicture != null">
        cover_picture,
      </if>
      <if test="virtualVote != null">
        virtual_vote,
      </if>
      <if test="actualVote != null">
        actual_vote,
      </if>
      <if test="virtualLike != null">
        virtual_like,
      </if>
      <if test="actualLike != null">
        actual_like,
      </if>
      <if test="sourceType != null">
        source_type,
      </if>
      <if test="likeStatus != null">
        like_status,
      </if>
      <if test="ipAddress != null">
        ip_address,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="rotatePictures != null">
        #{rotatePictures,jdbcType=VARCHAR},
      </if>
      <if test="coverPicture != null">
        #{coverPicture,jdbcType=VARCHAR},
      </if>
      <if test="virtualVote != null">
        #{virtualVote,jdbcType=DECIMAL},
      </if>
      <if test="actualVote != null">
        #{actualVote,jdbcType=DECIMAL},
      </if>
      <if test="virtualLike != null">
        #{virtualLike,jdbcType=DECIMAL},
      </if>
      <if test="actualLike != null">
        #{actualLike,jdbcType=DECIMAL},
      </if>
      <if test="sourceType != null">
        #{sourceType,jdbcType=INTEGER},
      </if>
      <if test="likeStatus != null">
        #{likeStatus,jdbcType=TINYINT},
      </if>
      <if test="ipAddress != null">
        #{ipAddress,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.demeter.cloud.model.entity.WorksInfoExample" resultType="java.lang.Long">
    select count(*) from demeter_works_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update demeter_works_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.introduction != null">
        introduction = #{record.introduction,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.customerId != null">
        customer_id = #{record.customerId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.rotatePictures != null">
        rotate_pictures = #{record.rotatePictures,jdbcType=VARCHAR},
      </if>
      <if test="record.coverPicture != null">
        cover_picture = #{record.coverPicture,jdbcType=VARCHAR},
      </if>
      <if test="record.virtualVote != null">
        virtual_vote = #{record.virtualVote,jdbcType=DECIMAL},
      </if>
      <if test="record.actualVote != null">
        actual_vote = #{record.actualVote,jdbcType=DECIMAL},
      </if>
      <if test="record.virtualLike != null">
        virtual_like = #{record.virtualLike,jdbcType=DECIMAL},
      </if>
      <if test="record.actualLike != null">
        actual_like = #{record.actualLike,jdbcType=DECIMAL},
      </if>
      <if test="record.sourceType != null">
        source_type = #{record.sourceType,jdbcType=INTEGER},
      </if>
      <if test="record.likeStatus != null">
        like_status = #{record.likeStatus,jdbcType=TINYINT},
      </if>
      <if test="record.ipAddress != null">
        ip_address = #{record.ipAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=TINYINT},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update demeter_works_info
    set id = #{record.id,jdbcType=INTEGER},
      code = #{record.code,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      introduction = #{record.introduction,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      customer_id = #{record.customerId,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      rotate_pictures = #{record.rotatePictures,jdbcType=VARCHAR},
      cover_picture = #{record.coverPicture,jdbcType=VARCHAR},
      virtual_vote = #{record.virtualVote,jdbcType=DECIMAL},
      actual_vote = #{record.actualVote,jdbcType=DECIMAL},
      virtual_like = #{record.virtualLike,jdbcType=DECIMAL},
      actual_like = #{record.actualLike,jdbcType=DECIMAL},
      source_type = #{record.sourceType,jdbcType=INTEGER},
      like_status = #{record.likeStatus,jdbcType=TINYINT},
      ip_address = #{record.ipAddress,jdbcType=VARCHAR},
      is_delete = #{record.isDelete,jdbcType=TINYINT},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      `status` = #{record.status,jdbcType=TINYINT},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.demeter.cloud.model.entity.WorksInfo">
    update demeter_works_info
    <set>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        introduction = #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="rotatePictures != null">
        rotate_pictures = #{rotatePictures,jdbcType=VARCHAR},
      </if>
      <if test="coverPicture != null">
        cover_picture = #{coverPicture,jdbcType=VARCHAR},
      </if>
      <if test="virtualVote != null">
        virtual_vote = #{virtualVote,jdbcType=DECIMAL},
      </if>
      <if test="actualVote != null">
        actual_vote = #{actualVote,jdbcType=DECIMAL},
      </if>
      <if test="virtualLike != null">
        virtual_like = #{virtualLike,jdbcType=DECIMAL},
      </if>
      <if test="actualLike != null">
        actual_like = #{actualLike,jdbcType=DECIMAL},
      </if>
      <if test="sourceType != null">
        source_type = #{sourceType,jdbcType=INTEGER},
      </if>
      <if test="likeStatus != null">
        like_status = #{likeStatus,jdbcType=TINYINT},
      </if>
      <if test="ipAddress != null">
        ip_address = #{ipAddress,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.demeter.cloud.model.entity.WorksInfo">
    update demeter_works_info
    set code = #{code,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      customer_id = #{customerId,jdbcType=INTEGER},
      goods_id = #{goodsId,jdbcType=INTEGER},
      rotate_pictures = #{rotatePictures,jdbcType=VARCHAR},
      cover_picture = #{coverPicture,jdbcType=VARCHAR},
      virtual_vote = #{virtualVote,jdbcType=DECIMAL},
      actual_vote = #{actualVote,jdbcType=DECIMAL},
      virtual_like = #{virtualLike,jdbcType=DECIMAL},
      actual_like = #{actualLike,jdbcType=DECIMAL},
      source_type = #{sourceType,jdbcType=INTEGER},
      like_status = #{likeStatus,jdbcType=TINYINT},
      ip_address = #{ipAddress,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=TINYINT},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectOneByExample" parameterType="com.demeter.cloud.model.entity.WorksInfoExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <include refid="Base_Column_List" />
    from demeter_works_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        id, code, `name`, introduction, content, customer_id, goods_id, rotate_pictures, 
          cover_picture, virtual_vote, actual_vote, virtual_like, actual_like, source_type, 
          like_status, ip_address, is_delete, create_by, create_time, update_by, update_time, 
          `status`, remark
      </otherwise>
    </choose>
    from demeter_works_info
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <update id="logicalDeleteByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update demeter_works_info set is_delete = 1
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="logicalDeleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update demeter_works_info set is_delete = 1
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>